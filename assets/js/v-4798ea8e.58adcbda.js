"use strict";(self.webpackChunkblog_vue_press=self.webpackChunkblog_vue_press||[]).push([[689],{4767:(e,a,t)=>{t.r(a),t.d(a,{data:()=>d});const d={key:"v-4798ea8e",path:"/%E5%85%B6%E4%BB%96/%E5%A6%82%E4%BD%95%E7%94%BB%E6%97%B6%E5%BA%8F%E5%9B%BE.html",title:"Object",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"流程图",slug:"流程图",children:[]},{level:2,title:"泳道图",slug:"泳道图",children:[]},{level:2,title:"时序图",slug:"时序图",children:[]},{level:2,title:"甘特图",slug:"甘特图",children:[]},{level:2,title:"参考",slug:"参考",children:[]}],filePathRelative:"其他/如何画时序图.md",git:{updatedTime:1637329507e3,contributors:[{name:"liujunjia",email:"43411944+liujunjia1996@users.noreply.github.com",commits:1}]}}},4131:(e,a,t)=>{t.r(a),t.d(a,{default:()=>i});const d=(0,t(6252).uE)('<p>时序图(Sequence diagram)描述对象之间交互的时间顺序。</p><h1 id="object" tabindex="-1"><a class="header-anchor" href="#object" aria-hidden="true">#</a> Object</h1><p>表示一个对象，如客户端a，服务端b，数据库c，某个中间件d。</p><h1 id="lifeline" tabindex="-1"><a class="header-anchor" href="#lifeline" aria-hidden="true">#</a> Lifeline</h1><p>从对象引出向下延伸的虚线，表示时序图存在的时间轴。</p><h1 id="focus-of-control" tabindex="-1"><a class="header-anchor" href="#focus-of-control" aria-hidden="true">#</a> Focus of Control</h1><p>即控制焦点，生命线上的矩形块，表示某个对象是否处于活跃状态。</p><h1 id="message" tabindex="-1"><a class="header-anchor" href="#message" aria-hidden="true">#</a> Message</h1><p>Message 分为：</p><ul><li>Self Message：实线实箭头指向自己</li><li>Sync Message：实线实箭头</li><li>Async Message：实线虚箭头</li><li>Reply Message：虚线虚箭头</li></ul><h1 id="combined-fragment" tabindex="-1"><a class="header-anchor" href="#combined-fragment" aria-hidden="true">#</a> Combined Fragment</h1><table><thead><tr><th>名称</th><th>作用</th><th>描述</th></tr></thead><tbody><tr><td>alt（alternatives）</td><td>选择</td><td>包含一个片段列表，这个片段列表有备选的消息序列，每次只能走一个消息序列</td></tr><tr><td>opt（option)</td><td>选项</td><td>包含一个可能会发生的消息序列</td></tr><tr><td>loop（iteration）</td><td>重复</td><td>包含一个可以重复的消息序列</td></tr><tr><td>par（parallel）</td><td>并行</td><td>包含一个可以并行的消息序列</td></tr><tr><td>break（break）</td><td>中断</td><td>如果执行了此部分则放弃了序列的其他部分的执行，可用于中断 loop 片段</td></tr></tbody></table><h1 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h1><p><img src="https://gitee.com/qaqljj/pic/raw/master/img/20210617235139.png" alt=""></p><h1 id="各种图的区别" tabindex="-1"><a class="header-anchor" href="#各种图的区别" aria-hidden="true">#</a> 各种图的区别</h1><h2 id="流程图" tabindex="-1"><a class="header-anchor" href="#流程图" aria-hidden="true">#</a> 流程图</h2><p>描述交互逻辑</p><h2 id="泳道图" tabindex="-1"><a class="header-anchor" href="#泳道图" aria-hidden="true">#</a> 泳道图</h2><p>描述跨模块的交互逻辑</p><h2 id="时序图" tabindex="-1"><a class="header-anchor" href="#时序图" aria-hidden="true">#</a> 时序图</h2><p>描述时序逻辑</p><h2 id="甘特图" tabindex="-1"><a class="header-anchor" href="#甘特图" aria-hidden="true">#</a> 甘特图</h2><p>描述项目或人的先后顺序与持续时间</p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2><p>https://juejin.cn/post/6923717340127297549</p>',25),r={},i=(0,t(3744).Z)(r,[["render",function(e,a){return d}]])},3744:(e,a)=>{a.Z=(e,a)=>{const t=e.__vccOpts||e;for(const[e,d]of a)t[e]=d;return t}}}]);