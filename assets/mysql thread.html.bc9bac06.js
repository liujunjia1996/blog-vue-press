import{_ as e,o as s,c as a,d as i}from"./app.f6bfe801.js";const n={},c=i(`<p>今天跑一个 mybatis 的 demo 项目，执行第一条数据库操作时会报错，重启数据库又自动恢复了，比较奇怪<br> 经过简单的研究，发现连接数不够导致的，但是连接数为什么会不够呢？</p><p><img src="https://user-images.githubusercontent.com/43411944/153551030-50a0ea54-fe75-4fd4-b4be-1a4c5a423dd2.png" alt="image"></p><p>my.ini 里面设置的连接数是 20：</p><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token comment"># 允许最大连接数</span>
<span class="token key attr-name">max_connections</span><span class="token punctuation">=</span><span class="token value attr-value">20</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>hikari 默认连接池的容量是 10，所以只要不同时起好几个服务应该都是没问题的，初步怀疑是 hikari 没归还连接？<br> 但是后面在 mysql 命令行使用：<code>show processlist</code>，发现里面有好多昨天启动 java 应用在占用数据库连接，所以判断还可能是 idea 的 bug，最后再使用 jps 验证，看到果然有好多昨天的 java 应用一直没关<br> 使用 <code>tskill pid</code> 把这些无关应用关闭之后，一切又恢复正常了，看来真的是错怪 hikari 了</p><p>下面是 <code>show status like &#39;Threads%&#39;</code> 里面每一行的含义：</p><ul><li>Threads_cached：mysql 被客户端断连后不会立即销毁线程，减少频繁创建连接的开销提升性能</li><li>Threads_connected：当前连接数，和 <code>show processlist</code> 的结果一致，但是 <code>show processlist</code> 会详细些</li><li>Threads_created：总新建数</li><li>Threads_running：活跃连接数，这个值一般比较小</li></ul>`,7),t=[c];function d(o,l){return s(),a("div",null,t)}const p=e(n,[["render",d],["__file","mysql thread.html.vue"]]);export{p as default};
